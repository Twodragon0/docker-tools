name: kubectl
# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: master
    paths:
    - kubectl/**
    - .github/workflows/kubectl.yaml

env:
  WORKSPACE: kubectl
  DOCKER_IMAGE: hub.docker.com/cloudkats/kubectl
  GITHUB_DOCKER_REGISTRY: docker.pkg.github.com

jobs:
  buildonpush:
    name: build-on-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v2

    - uses: brpaz/hadolint-action@v1.0.2
      env:
        XDG_CONFIG_HOME: ${{ env.WORKSPACE }}/hadolint.yaml
      with:
        dockerfile: ${{ env.WORKSPACE }}/Dockerfile

    -
      name: prepare
      id: prep
      working-directory: ${{ env.WORKSPACE }}
      run: |
        VERSION=$(sed -n 's/ENV KUBECTL_VERSION=v\(.*\)/\1/p' Dockerfile)
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        TAGS="${TAGS},${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:$(date -u +'%Y%m%d')"

        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=created::$(date -u +'%Y-%m-%d')

    -
      name: dockerhub login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    -
      name: build and push
      id: docker_build
      uses: docker/build-push-action@v1
      with:
        # path: ${{ env.WORKSPACE }}
        dockerfile: ${{ env.WORKSPACE }}/Dockerfile
        push: true
        # tags: ${{ steps.prep.outputs.tags }}
        repository: ${{ env.DOCKER_IMAGE }}
        tags: latest
        labels: |
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.version=${{ steps.prep.outputs.version }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.name }}

    - name: docker hub description
      uses: peter-evans/dockerhub-description@v2
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        DOCKERHUB_REPOSITORY: ${{ env.DOCKER_IMAGE }}
