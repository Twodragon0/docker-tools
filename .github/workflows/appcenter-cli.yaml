name: appcenter-cli
# This workflow is triggered on pushes to the repository.

on:
  push:
    paths:
    - appcenter-cli/**
    - .github/workflows/appcenter-cli.yaml

env:
  WORKSPACE: appcenter-cli
  DOCKER_REPO: cloudkats
  DOCKER_IMAGE: appcenter-cli

jobs:
  buildonpush:
    name: BuildOnPush
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2

    - name: Build the Docker image
      working-directory: ${{ env.WORKSPACE }}
      run: ./build.sh

    - name: login to registry
      run: |
        echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}

    - name: prepare
      id: prep
      working-directory: ${{ env.WORKSPACE }}
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        TAGS="${VERSION},latest,$(date -u +'%Y%m%d')"
        IMAGE_VERSION="${GITHUB_SHA::8}"
        IMAGE_ID="${DOCKER_REPO}/${DOCKER_IMAGE}"

        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=created::$(date -u +'%Y-%m-%d')
        echo ::set-output name=vcs_ref::${GITHUB_SHA::8}

    # - name: Push Docker image
    #   working-directory: ${{ env.WORKSPACE }}
    #   run: |
    #     echo "Push"

    #     image_version="latest"
    #     IMAGE_ID="${DOCKER_REPO}/${DOCKER_IMAGE}"
    #     tag_date="$(date +%Y%d%m)"

    #     # Strip git ref prefix from version
    #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
    #     # Strip "v" prefix from tag name
    #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

    #     ./push.sh

    - name: docker hub description
      uses: peter-evans/dockerhub-description@v2
      with:
        dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        dockerhub_password: ${{ secrets.DOCKERHUB_PASSWORD }}
        dockerhub_repository: ${{ env.DOCKER_REPO }}/${{ env.DOCKER_IMAGE }}
        readme_filepath: ${{ env.WORKSPACE }}/README.md
